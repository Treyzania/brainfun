
#include <stdlib.h>
#include <stdio.h>
#include <string.h>

/*
 *              ======== DISCLAIMER ========
 * This program was generated by a program.  Do not use it to
 * learn how to write code.  This is not a good example. This
 * program likely has excessive amounts of very bad code, so
 * we are relying on the compiler to optimize many things.
 * This file was translated from a language called brainfun,
 * which is a fork of the language known as brainfuck.  Read
 * up on this online on Wikipedia.
 * 
 * Good luck, Treyzania
 * 
 */

// Registers
unsigned char* a;
unsigned char* b;
unsigned char* c;
unsigned char* d;

FILE* i;
FILE* j;
FILE* k;

unsigned char* stack;
unsigned char* data;
unsigned char* sp; // Stack pointer.
unsigned char* dp; // Data pointer.

void push_stack(unsigned char ch) {
	
	/*
	 * This means that the byte that `stack` points to
	 * will never be filled, always 0.  So what.
	 */
	
	sp++;
	*sp = ch;
	
}

void drop_stack_top(void) {
	
	sp--;
	
}

unsigned char pop_stack(void) {
	
	unsigned char ch = *sp;
	drop_stack_top(); // When you pop, it drops.
	
	return ch;
	
}

void pushregs(void) {
	
	push_stack(*a);
	push_stack(*b);
	push_stack(*c);
	push_stack(*d);
	
}

void popregs(void) {
	
	// Reverse order because stacks are LIFO.
	*d = pop_stack();
	*c = pop_stack();
	*b = pop_stack();
	*a = pop_stack();
	
}

